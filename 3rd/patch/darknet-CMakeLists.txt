cmake_minimum_required(VERSION 2.8)
project(darknet)

option(DARKNET_GPU    "Support GPU" OFF)
option(DARKNET_OPENCV "Support OpenCV" OFF)
option(DARKNET_CUDNN  "Support CUDNN" OFF)

if (DARKNET_GPU)
    add_definitions(-DGPU=1)
    include_directories(usr/local/cuda/include/)
    link_directories(/usr/local/cuda/lib64)
    set(GPU_SRC
        src/convolutional_kernels.c
        src/activation_kernels.c
        src/im2col_kernels.c
        src/col2im_kernels.c
        src/blas_kernels.c
        src/crop_layer_kernels.c
        src/dropout_layer_kernels.c
        src/maxpool_layer_kernels.c
        src/network_kernels.c
        src/avgpool_layer_kernels.c
        )
    set(GPU_LIBS cuda cudart cublas curand stdc++)
endif()

if (DARKNET_OPENCV)
    add_definitions(-DOPENCV=1)
endif()

if (DARKNET_CUDNN)
    add_definitions(-DCUDNN=1)
    set(CUDNN_LIBS cudnn)
endif()


add_executable(${PROJECT_NAME}
    src/gemm.c
    src/utils.c
    src/cuda.c
    src/convolutional_layer.c
    src/list.c
    src/image.c
    src/activations.c
    src/im2col.c
    src/col2im.c
    src/blas.c
    src/crop_layer.c
    src/dropout_layer.c
    src/maxpool_layer.c
    src/softmax_layer.c
    src/data.c
    src/matrix.c
    src/network.c
    src/connected_layer.c
    src/cost_layer.c
    src/parser.c
    src/option_list.c
    src/darknet.c
    src/detection_layer.c
    src/captcha.c
    src/route_layer.c
    src/writing.c
    src/box.c
    src/nightmare.c
    src/normalization_layer.c
    src/avgpool_layer.c
    src/coco.c
    src/dice.c
    src/yolo.c
    src/detector.c
    src/layer.c
    src/compare.c
    src/classifier.c
    src/local_layer.c
    src/swag.c
    src/shortcut_layer.c
    src/activation_layer.c
    src/rnn_layer.c
    src/gru_layer.c
    src/rnn.c
    src/rnn_vid.c
    src/crnn_layer.c
    src/demo.c
    src/tag.c
    src/cifar.c
    src/go.c
    src/batchnorm_layer.c
    src/art.c
    src/region_layer.c
    src/reorg_layer.c
    src/super.c
    src/voxel.c
    src/tree.c
    ${GPU_SRC})

target_link_libraries(${PROJECT_NAME} m pthread ${GPU_LIBS} ${CUDNN_LIBS})

install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
